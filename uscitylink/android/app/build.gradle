plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
    namespace = "com.uscitylink.app"
    compileSdk 36
    ndkVersion = '29.0.14033849'

    compileOptions {
        coreLibraryDesugaringEnabled = true

        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        multiDexEnabled=true
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.uscitylink.app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
            

    }
signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
           // signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
        }
    }
    buildToolsVersion '34.0.0'

   dependencies {
    
    // implementation 'com.google.firebase:firebase-messaging:23.1.0'  // Required if you're using Firebase
implementation 'androidx.window:window:1.0.0'
implementation 'androidx.window:window-java:1.0.0'
implementation 'com.android.support:multidex:1.0.3'  
coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'

}

    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }
        
        // CORRECT SYNTAX - use exclude instead of excludes
//        exclude 'lib/arm64-v8a/libjniPdfium.so'
//        exclude 'lib/arm64-v8a/libmodft2.so'
//        exclude 'lib/arm64-v8a/libmodpdfium.so'
//        exclude 'lib/arm64-v8a/libmodpng.so'
//        exclude 'lib/x86_64/libc++_shared.so'


        // For wildcard patterns, use this syntax:
//        exclude '**/libjniPdfium.so'
//        exclude '**/libmodft2.so'
//        exclude '**/libmodpdfium.so'
//        exclude '**/libmodpdfium.so'
//        exclude '**/ibc++_shared.so'

        // Pick first occurrence of libc++_shared.so to avoid conflicts
//        pickFirst 'lib/arm64-v8a/libc++_shared.so'
//        pickFirst 'lib/x86_64/libc++_shared.so'
    }
}

flutter {
    source = "../.."
}
